name: Deploy to TestFlight

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4
      - name: List of Xcode versions
        run: ls /Applications | grep Xcode
      - name: Xcode version select
        run: sudo xcode-select -s /Applications/Xcode_16.2.app/Contents/Developer
      - name: Current Xcode version
        run: xcodebuild -version

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'

      - run: flutter pub get

      - name: Install iOS dependencies
        run: |
          cd ios
          pod install --repo-update
          cd ..

      - name: Patch bundle identifier and signing style
        run: |
          sed -i '' 's/com\.example\.korshilesApp/com.korshiles.app/g' ios/Runner.xcodeproj/project.pbxproj
          sed -i '' 's/CODE_SIGN_STYLE = Manual;/CODE_SIGN_STYLE = Automatic;/g' ios/Runner.xcodeproj/project.pbxproj
          sed -i '' 's/PROVISIONING_PROFILE_SPECIFIER = .*;/PROVISIONING_PROFILE_SPECIFIER = "";/g' ios/Runner.xcodeproj/project.pbxproj
          sed -i '' 's/DEVELOPMENT_TEAM = .*;/DEVELOPMENT_TEAM = '"${{ secrets.DEVELOPER_TEAM_ID }}"';/g' ios/Runner.xcodeproj/project.pbxproj

      - name: Install Apple Distribution Certificate
        run: |
          echo "${{ secrets.IOS_DISTRIBUTION_P12 }}" | base64 --decode > certificate.p12
          security create-keychain -p "" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "" build.keychain
          security import certificate.p12 -k build.keychain -P "" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k "" build.keychain

      - name: Install Provisioning Profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "${{ secrets.IOS_PROFILE_BASE64 }}" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision

      - name: Install fastlane
        run: sudo gem install fastlane -NV

      - name: Setup Fastlane Config
        working-directory: ios
        run: |
          mkdir -p fastlane

          cat > fastlane/Fastfile <<EOF
          default_platform(:ios)
      
          platform :ios do
            desc "Push a new beta build to TestFlight"
            lane :beta do
              api_key = app_store_connect_api_key(
                key_id: ENV["APP_STORE_CONNECT_KEY_ID"],
                issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
                key_filepath: ENV["APP_STORE_CONNECT_API_KEY_PATH"],
                in_house: false
              )
              
              build_app(
                workspace: "Runner.xcworkspace",
                scheme: "Runner",
                export_method: "app-store",
                export_options: {
                  provisioningProfiles: {
                    "com.korshiles.app" => "KorshilesProvision"
                  },
                  teamID: ENV["DEVELOPER_TEAM_ID"],
                  signingStyle: "manual"
                },
                export_team_id: ENV["DEVELOPER_TEAM_ID"],
                xcargs: "-allowProvisioningUpdates"
              )
              upload_to_testflight(api_key: api_key)
            end
          end
          EOF

      - name: Decode App Store API Key
        run: echo "${{ secrets.APP_STORE_CONNECT_API_KEY }}" | base64 --decode > ios/AuthKey.p8

      - name: Deploy using fastlane
        working-directory: ios
        env:
          APP_STORE_CONNECT_API_KEY_PATH: ./AuthKey.p8
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          DEVELOPER_TEAM_ID: ${{ secrets.DEVELOPER_TEAM_ID }}
        run: fastlane beta
