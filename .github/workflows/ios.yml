name: Deploy to TestFlight

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: macos-latest
    env:
      APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
      APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
      APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
      APP_STORE_APP_ID: com.korshiles.app
      DISTRIBUTION_CERTIFICATE: ${{ secrets.IOS_DISTRIBUTION_P12 }}
      DISTRIBUTION_CERTIFICATE_PASSWORD: ${{ secrets.IOS_CERT_PASSWORD }}
      PROVISIONING_PROFILE: ${{ secrets.IOS_PROFILE_BASE64 }}

    steps:
      - uses: actions/checkout@v4
      - name: List of Xcode versions
        run: ls /Applications | grep Xcode
      - name: Xcode version select
        run: sudo xcode-select -s /Applications/Xcode_16.2.app/Contents/Developer
      - name: Current Xcode version
        run: xcodebuild -version

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0'

      - run: |
          flutter clean
          flutter pub get

      # Set up Ruby (for Fastlane)
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1

      # Install Bundler & Fastlane
      - name: Install Bundler and Fastlane
        run: |
          cd ios
          gem install bundler
          bundle init || true
          echo 'gem "fastlane"' >> Gemfile
          bundle install

      # Save API Key file for Fastlane
      - name: Save App Store Connect API Key
        run: |
          mkdir -p ~/.appstoreconnect/private_keys
          echo "${APP_STORE_CONNECT_API_KEY}" > ~/.appstoreconnect/private_keys/AuthKey_${APP_STORE_CONNECT_KEY_ID}.p8

      # Initialize Fastlane if missing
      - name: Initialize Fastlane (if missing)
        run: |
          cd ios
          if [ ! -d "fastlane" ]; then
            mkdir fastlane
            cat > fastlane/Fastfile <<EOF
              default_platform(:ios)
              
              platform :ios do
                desc "Push a new beta build to TestFlight"
                lane :beta do
                  build_app(scheme: "Runner",
                            export_method: "app-store",
                            export_options: {
                              provisioningProfiles: {
                                "com.korshiles.app" => "match AppStore com.korshiles.app"
                              }
                            })
                  upload_to_testflight
                end
              end
              EOF
            cat > fastlane/Appfile <<EOF
            app_identifier("com.korshiles.app") # Replace with your appâ€™s bundle ID
            apple_team_id("T848W2JRH4")         # Replace with your Apple Developer Team ID
            EOF
                      fi

      # Build and deploy using Fastlane
      - name: Deploy to TestFlight
        run: |
          cd ios
          bundle exec fastlane beta
